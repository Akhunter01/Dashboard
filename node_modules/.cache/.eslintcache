[{"/Users/Caroline/Documents/react/dashboard/src/index.js":"1","/Users/Caroline/Documents/react/dashboard/src/reportWebVitals.js":"2","/Users/Caroline/Documents/react/dashboard/src/App.js":"3","/Users/Caroline/Documents/GitHub/Dashboard/src/index.js":"4","/Users/Caroline/Documents/GitHub/Dashboard/src/App.js":"5","/Users/Caroline/Documents/GitHub/Dashboard/src/reportWebVitals.js":"6"},{"size":500,"mtime":1636130469920,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1636130469922,"results":"9","hashOfConfig":"8"},{"size":2537,"mtime":1636971865049,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1636130469920,"results":"11","hashOfConfig":"12"},{"size":2507,"mtime":1637314704106,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1636130469922,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1t6r7c0",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l3oynp",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Caroline/Documents/react/dashboard/src/index.js",[],["29","30"],"/Users/Caroline/Documents/react/dashboard/src/reportWebVitals.js",[],"/Users/Caroline/Documents/react/dashboard/src/App.js",["31","32"],"/Users/Caroline/Documents/GitHub/Dashboard/src/index.js",[],"/Users/Caroline/Documents/GitHub/Dashboard/src/App.js",["33"],"import \"./App.css\";\n\nimport img from \"./img/jauge_sleep.png\";\n\nconst user = {\n  name: \"Michel\",\n  lastName: \"Dupond\",\n  workout: {\n    lastSession: {\n      duration: 2,\n      sport: \"VTT\",\n      week: 42,\n      calories: 400,\n    },\n  },\n  sleep: [\n    {\n      date: 1636135998015,\n      duration: 300,\n      bpm: 60,\n      percentageDeepSleep: 40,\n      percentageLightSleep: 30,\n    },\n  ],\n};\n\nconst Card = (props) => {\n  return (\n    <div>\n      <p className=\"font-bold text-left pl-2 w-full \">{props.title}</p>\n      <div className=\"bg-blue-200 flex flex-col justify-center items-center p-2 m-2 rounded-3xl text-xs\">\n        <p className=\"text-left pl-4 w-full text-base\">{props.subtitle}</p>\n        {props.children}\n      </div>\n    </div>\n  );\n};\nfunction App() {\n  return (\n    <div className=\"flex items-center flex-col w-full\">\n      <header className=\"flex justify-between w-full text-center font-bold text-xl mb-4\">\n        <div>Let's the healthy life begin</div>\n        <div className=\"font-light\">Hello {user.name}</div>\n      </header>\n      <main className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <Card title=\"Sleep quality and time to bed\">\n            <img src={img} />\n          </Card>\n          <Card>graphique sur la semaine</Card>\n        </div>\n        <div>\n          <Card title=\"No pain, no gain\">\n            <>\n              training <br />\n              {user.workout.lastSession.sport} <br />\n              week {user.workout.lastSession.week} <br />\n              {user.workout.lastSession.duration} hours\n            </>\n          </Card>\n          <Card subtitle=\"Diet and Calories\">\n            You burnt {user.workout.lastSession.calories} calories this week.\n          </Card>\n        </div>\n        <div>\n          <Card title=\"Eating is bae\">\n            Calculator of calories //the user enters the composition of his meal\n            (for example 200g of veal, 100g of rice, 60g of zuchinis...) //he\n            specifies if he uses oil or sugar or whatever... //we have the data\n            of the number of calories of every ingredient //with an incredible\n            cross product we calculate the calories of his meal\n          </Card>\n        </div>\n        <div>\n          <Card title=\"Lesson of life\">\n            API citation <br />\n            Tu sais, c'est pas la longueur de la vie qui compte, mais sa\n            profondeur :`)``\n          </Card>\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Caroline/Documents/GitHub/Dashboard/src/reportWebVitals.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"43","line":49,"column":13,"nodeType":"44","endLine":49,"endColumn":30},{"ruleId":"42","severity":1,"message":"43","line":48,"column":13,"nodeType":"44","endLine":48,"endColumn":30},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]